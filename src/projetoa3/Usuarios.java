/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projetoa3;

/**
 *
 * @author fgs_l
 */
public class Usuarios extends javax.swing.JFrame {

    private int Codigo;
    
    /**
     * Creates new form Usuarios
     */
    
    
    public Usuarios(int codigo) {
        this.Codigo = codigo;
        
        initComponents();
        
        DB db = new DB("BancoDados.db");
        
        var query = "SELECT * from Usuario where Codigo = " + codigo + ";";
        db.query(query);
        String cols[] = {"CODIGO", "NOME", "SENHA", "EMAIL"};
        String fields[] = {"Codigo", "Nome", "Senha", "email"};
        TableRender.render(table, cols, fields, db);
        while(db.next()){
            int codigoUsuario = db.getInt("Codigo");
            String usuario = db.getString("Nome");
            System.out.println("Código: " + codigoUsuario);
            System.out.println("Nome: " + usuario);
        }
        db.closeConnection();
    }
    
    public Usuarios() {
        
        initComponents();
        
        DB db = new DB("BancoDados.db");
        
        var query = "SELECT * from Usuario";
        db.query(query);
        String cols[] = {"CODIGO", "NOME", "SENHA", "EMAIL"};
        String fields[] = {"Codigo", "Nome", "Senha", "email"};
        TableRender.render(table, cols, fields, db);
        while(db.next()){
            int codigoUsuario = db.getInt("Codigo");
            String usuario = db.getString("Nome");
            System.out.println("Código: " + codigoUsuario);
            System.out.println("Nome: " + usuario);
        }
        db.closeConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        editarUsuario = new javax.swing.JButton();
        removerUsuario = new javax.swing.JButton();
        atualizarTabela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        editarUsuario.setText("Editar Usuário");
        editarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarUsuarioActionPerformed(evt);
            }
        });

        removerUsuario.setText("Remover Usuário");
        removerUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerUsuarioActionPerformed(evt);
            }
        });

        atualizarTabela.setText("Atualizar Tabela");
        atualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(atualizarTabela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removerUsuario)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editarUsuario)
                    .addComponent(removerUsuario)
                    .addComponent(atualizarTabela))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removerUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerUsuarioActionPerformed
        var linhaSelecionada = table.getSelectedRow();
        var codigo = table.getValueAt(linhaSelecionada, 0);
        
        System.out.println(codigo);
        
        DB db = new DB("BancoDados.db");
        String query = "DELETE FROM Usuario WHERE Codigo = " + codigo;
        db.execQuery(query);
    }//GEN-LAST:event_removerUsuarioActionPerformed

    private void editarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarUsuarioActionPerformed
        BotaoEditarUsuario editar = new BotaoEditarUsuario();
        editar.setVisible(true);
    }//GEN-LAST:event_editarUsuarioActionPerformed

    private void atualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarTabelaActionPerformed
        this.dispose();
        
        DB db = new DB("BancoDados.db");
        
        System.out.println(this.Codigo);
        
        var query = "SELECT * from Usuario";
        db.query(query);
        String cols[] = {"CODIGO", "NOME", "SENHA", "EMAIL"};
        String fields[] = {"Codigo", "Nome", "Senha", "email"};
        TableRender.render(table, cols, fields, db);
        while(db.next()){
            int codigo = db.getInt("Codigo");
            String usuario = db.getString("Nome");
            System.out.println("Código: " + codigo);
            System.out.println("Nome: " + usuario);
        }
        
        this.setVisible(true);
        
        db.closeConnection();
    }//GEN-LAST:event_atualizarTabelaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizarTabela;
    private javax.swing.JButton editarUsuario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removerUsuario;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
